Binary search:

La búsqueda binaria es un algoritmo eficiente para encontrar un elemento en una lista ordenada de elementos. Funciona al dividir repetidamente a la mitad la porción de la lista que podría contener al elemento, hasta reducir las ubicaciones posibles a solo una.

Parte de una colección de datos ordenada y busca el punto medio, descartando la parte donde no está el elemento y partiendo de nuevo a la mitad el sub conjunto donde si está.


Supongamos que tenemos el siguiente arreglo de 15 elementos: [1, 3, 4, 7, 9, 11, 13, 16, 19, 18, 20, 22, 24, 27, 30]

1- Se inicializan 3 variables: indiceInferior con 0, indiceSuperior con el tamaño del arreglo y elementoMedio la mitad entre ambos índices.
2- Si el elemento que está en medio es igual al que buscamos, terminamos el algorirmo.
3- Si es mayor, actualizamos el indiceInferior que toma el valor del elementoMedio
4- Si es menor, actualizamos el indiceSuperior que toma el valor del elementoMedio
5- Volemos a comarar hasta que encontremos el valor deseado o la diferencia entre indiceSuperior–indiceInferior sea menor o igual a 1.

El valor sería encontrado en 3 iteraciones de nuestro algoritmo. Esto nos da una notación de tiempo de O log(n), mucho mas eficiente que la búsqueda lineal que sería O(n). Este tipo de algoritmos también son llamados in place, ya que no requieren estructuras de datos adicionales (otro arreglo) para encontrar el resultado.


---Conclusion----
En resumidas cuentas este algoritmo nos funciona si tenemos una lista ordenada y deseamos encontrar un elemento dentro de esta lista, nos ayuda ya que en una digamos analisis lineal donde se examina uno por uno en el peor de los casos tenemos que examniar el maximo de numeros ya que el elemento deseado esta al final de esta lista. En este caso este algoritmo me parece bastante util y me gustaria poder implementarlo para ver como funciona en tiempo real.