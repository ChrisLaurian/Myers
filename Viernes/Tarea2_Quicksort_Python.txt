quick sort en python

#definimos la funcion y los valores que recibe
def partition(xs, start, end):
    follower = leader = start
    #cuando leader sea menor que end 
    while leader < end:
        #si la posicion del xs es menor o igual que la posicion en end va a hacer lo siguiente
        if xs[leader] <= xs[end]:
            #las pocisiones le asignamos valores de las otras posiciones
            xs[follower], xs[leader] = xs[leader], xs[follower]
            follower += 1
        leader += 1
    #a las pociciones en xs del follower y end le asiganmos las nuevas posiciones
    xs[follower], xs[end] = xs[end], xs[follower]
    #Regresamos el valor de follower
    return follower

#definimos la funcion y los parametros que debe recibir
def _quicksort(xs, start, end):
    #si start es mayor o igual que end entonces
    if start >= end:
        return
    # asiganmos p a las partition
    p = partition(xs, start, end)
    _quicksort(xs, start, p-1)
    _quicksort(xs, p+1, end)
    
#definimos la funcion y el parametro que recibe
def quicksort(xs):
    _quicksort(xs, 0, len(xs)-1)